name: ServiceTestsDeploy

on:
  push:
    branches: ['dev', 'main']

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: localhost
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Create test database
        run: |
          psql -h localhost -U postgres -c 'CREATE DATABASE "studySync_test";'
        env:
          PGPASSWORD: postgres

      - name: Install dependencies
        run: |
          npm ci -s

      - name: Prepare .env.test.local
        run: |
            touch .env.test.local
            echo PORT=8080 >> .env.test.local
            echo ENV_MODE="test" >> .env.test.local
            echo DATABASE_URL="postgresql://postgres:postgres@localhost:5432/studySync_test?schema=public" >> .env.test.local
            echo TOKEN_KEY="abcd" >> .env.test.local

      - name: Create tables for test database
        run: |
          npm run prisma:push:test

      - name: Run tests
        run: |
          npm test
